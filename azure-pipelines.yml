# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
  branches:
    include: 
    - master
  tags:
    include:
    - '*'

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: 'SharpDL/SharpDL.csproj'
    versioningScheme: 'off'

# Deploy release to NuGet.org
# Custom nuget command has to be used to workaround issue where dotnet core doesn't support encrypted API Key publication
# -n to skip symbols
# --skip-duplicate to prevent publishing the same version more than once
- task: DotNetCoreCLI@2
  displayName: Push Nuget Package
  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
  inputs:
    command: custom
    custom: nuget
    arguments: >
      push $(Build.ArtifactStagingDirectory)/**.nupkg
      -s $(NuGetSourceServerUrl)
      -k $(NuGetSourceServerApiKey)
      -n true
      --skip-duplicate

# Deploy release to GitHub
- task: GitHubRelease@1
  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
  inputs:
    gitHubConnection: 'GitHub.com OAuth - Babelshift'
    repositoryName: 'babelshift/SharpDL'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'gitTag'
    tagPattern: 'Release-*'
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'